name: neko_arch

on: 
  workflow_dispatch:
jobs:

  GNU:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12]
        compiler: [gfortran-10, gfortran-11, gfortran-12]
        exclude:
        - os: macos-12
          compiler: gfortran-10
        - os: ubuntu-20.04
          compiler: gfortran-11
        - os: ubuntu-20.04
          compiler: gfortran-12
        include:
        - os: macos-12
          setup-env: brew install gcc@11 && brew install gcc@12
    env:
      FC: ${{ matrix.compiler }}
    name: ${{ matrix.os }} / ${{ matrix.compiler }}
    steps:
    - name: Setup env.
      run: ${{ matrix.setup-env }}
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.19.x'
    - name: Compile_with_cmake
      run: |
        mkdir cmake-build
        cd cmake-build
        cmake ..
        make -j 4 check
  Intel:
      runs-on: ${{matrix.os}}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-20.04]
          compiler: [ifort, ifx]
          exclude:
          - os: ubuntu-20.04
            compiler: ifx
          include:
          - os: ubuntu-20.04
            setup-env: cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main" && sudo apt install --no-install-recommends intel-oneapi-compiler-fortran intel-oneapi-mpi intel-oneapi-mpi-devel intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic && source /opt/intel/oneapi/setvars.sh && sudo apt install -y autoconf automake autotools-dev libopenblas-dev make git m4 python3 ca-certificates && printenv >> $GITHUB_ENV
      env:
        CC: icc
        FC: ${{ matrix.compiler }}
      name: ${{ matrix.os }} / ${{ matrix.compiler }}
      steps:
      - name: Setup env.
        run: ${{ matrix.setup-env }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.19.x'
      - name: Compile_with_cmake
        run: |
          mkdir cmake-build
          cd cmake-build
          cmake ..
          make -j 4 check
